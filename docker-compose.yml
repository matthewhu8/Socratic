version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=socratic
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./socratic-frontend
    ports:
      - "80:80"
    depends_on:
      - main_service
    environment:
      - REACT_APP_API_URL=http://main_service:8000

  main_service:
    build:
      context: ./Backend/main_service
    ports:
      - "8000:8000"
    depends_on:
      - database_service
      - vector_service
      - llm_service
    environment:
      - DATABASE_SERVICE_URL=http://database_service:8001
      - VECTOR_SERVICE_URL=http://vector_service:8002
      - LLM_SERVICE_URL=http://llm_service:8003
      - REDIS_URL=redis://redis:6379

  database_service:
    build:
      context: ./Backend/database_service
    ports:
      - "8001:8001"
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/socratic
    command: ["./wait-for-it.sh", "postgres:5432", "--", "python", "run.py"]

  vector_service:
    build:
      context: ./Backend/vector_service
    ports:
      - "8002:8002"
    volumes:
      - vector_data:/app/data/chroma_db

  llm_service:
    build:
      context: ./Backend/llm_service
    ports:
      - "8003:8001"
    volumes:
      - llm_cache:/app/model_cache
    environment:
      - PORT=8001
      - MODEL_CACHE_DIR=/app/model_cache
      - DEVICE=mps

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  vector_data:
  llm_cache:
  redis_data:
